---
# This is an example playbook to execute Ansible tests.

- name: Verify Filesystem Configuration
  hosts: all
  tasks:
    - name: 1.1.1 and 1.1.23 (usb-storage)
      vars:
        filesystems:
          - cramfs
          - freevxfs
          - jffs2
          - hfs
          - hfsplus
          - squashfs
          - udf
          - vfat
          - usb-storage
      tags: notest
      block:
        - name: Get modprobe output
          ansible.builtin.command: modprobe -n -v {{ item }}
          register: modprobe_out
          changed_when: false
          failed_when: false
          loop: "{{ filesystems }}"

        - name: Assert modprobe output
          ansible.builtin.assert:
            that: "'install /bin/true' in item.stdout"
            quiet: true
          loop: "{{ modprobe_out.results }}"
          loop_control:
            label: "{{ item.cmd }}"

        - name: Get lsmod output
          ansible.builtin.shell: "lsmod | grep {{ item }} | wc -l"
          register: lsmod_out
          changed_when: false
          failed_when: true
          loop: "{{ filesystems }}"

        - name: Assert lsmod output
          ansible.builtin.assert:
            that: "item.stdout | int == 0"
            quiet: true
          loop: "{{ lsmod_out.results }}"
          loop_control:
            label: "{{ item.cmd }}"

    - name: 1.1.2
      tags: notest
      vars:
        opts:
          - nodev
          - nosuid
          - noexec
      block:
        - name: Get mount output
          ansible.builtin.shell: >-
            mount | grep -E '\s/tmp\s' | grep -v {{ item }}
          register: mount_out
          changed_when: false
          failed_when: false
          loop: "{{ opts }}"
          loop_control:
            label: "{{ item }}"

        - name: Assert mount output
          ansible.builtin.assert:
            that: "item.stdout_lines | length == 0"
            quiet: true
          loop: "{{ mount_out.results }}"
          loop_control:
            label: "{{ item.cmd }}"

    - name: 1.1.21
      tags: test
      block:
        - name: Running check script
          ansible.builtin.shell: >
            df --local -P |
            awk '{if (NR!=1) print $6}' |
            xargs -I '{}' find '{}' -xdev -type d
            \( -perm -0002 -a ! -perm -1000 \) 2>/dev/null
          changed_when: false
          failed_when: false
          register: cmd_out

        - name: Assert check script output
          ansible.builtin.assert:
            that: cmd_out.stdout_lines | length == 0
            quiet: true
