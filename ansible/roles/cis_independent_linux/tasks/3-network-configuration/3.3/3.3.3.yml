---
- name: 3.3.3
  tags:
    - 3.3.3
    - level_1_server
    - level_1_workstation
  when:
    # section_3_3_3
    - configure_hosts_deny | bool
  block:
    - name: |
        ---
        3.3.3 Ensure /etc/hosts.deny is configured
        > Get existing configuration for pattern: {{ rule }}
        ---
      ansible.builtin.shell: >-
        grep -P '^{{ rule | regex_escape() }}\s*:' /etc/hosts.deny |
        cut -d ':' -f2-
      register: old_hosts_deny
      changed_when: false

    - name: |
        ---
        3.3.2 Ensure /etc/hosts.deny is configured
        > Configure /etc/hosts.deny for pattern: {{ rule }}
        ---
      vars:
        old_confs: "{{ old_hosts_deny.stdout.split() }}"
        diff_confs: "{{ hosts_deny[rule] | symmetric_difference(old_confs) }}"
      when: diff_confs | length > 0
      ansible.builtin.lineinfile:
        path: /etc/hosts.deny
        regexp: '^{{ rule | regex_escape() }}\s*:'
        line: "{{ rule }}: {{ ', '.join(hosts_deny[rule]) }}"
        state: present
        create: true
        # backup: true
        owner: root
        group: root
        mode: "0644"

  rescue:
    - name: Flushing all handlers
      ansible.builtin.meta: flush_handlers

    - name: Error backtrace
      vars:
        section_id: 3.3.3
      ansible.builtin.import_tasks:
        file: error_logging.yml
