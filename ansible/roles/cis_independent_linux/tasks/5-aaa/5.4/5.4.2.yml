---
- name: 5.4.2
  tags:
    - 5.4.2
    - level_1_server
    - level_1_workstation
  when:
    # section_5_4_2
    - secure_system_accounts | bool
  block:
    - name: |
        ---
        5.4.2 Ensure system accounts are secured
        > Get system accounts whose shell is not nologin shell or /bin/false
        ---
      ansible.builtin.shell: >-
        awk -F: '($1!="root" && $1!="sync" && $1!="shutdown" && $1!="halt" &&
        $1!~/^\+/ && $3<{{ uid_min }} && $7!="/bin/false" && $7!="/sbin/nologin"
        && $7!="/usr/sbin/nologin") { print $1 }' /etc/passwd
      register: login_shell_sys_acc
      changed_when: false

    - name: |
        ---
        5.4.2 Ensure system accounts are secured
        > Set nologin shell to matched system accounts
        ---
      ansible.builtin.shell: >-
        usermod -s $(which nologin) {{ username }}
      loop: "{{ login_shell_sys_acc.stdout_lines }}"
      loop_control:
        loop_var: username
        label: "{{ username }}"
      changed_when: true

    - name: |
        ---
        5.4.2 Ensure system accounts are secured
        > Get system accounts which are not locked
        ---
      ansible.builtin.shell: >-
        awk -F: '($1!="root" && $1!~/^\+/ && $3<{{ uid_min }}) { print $1 }'
        /etc/passwd | xargs -I{} -n1 passwd -S {} | awk '($2!="L" && $2!="LK")
        { print $1 }'
      register: unlocked_sys_acc
      changed_when: false

    - name: |
        ---
        5.4.2 Ensure system accounts are secured
        > Lock matched system accounts
        ---
      ansible.builtin.shell: >-
        usermod -L {{ username }}
      loop: "{{ unlocked_sys_acc.stdout_lines }}"
      loop_control:
        loop_var: username
        label: "{{ username }}"
      changed_when: true

  rescue:
    - name: Flushing all handlers
      ansible.builtin.meta: flush_handlers

    - name: Error backtrace
      vars:
        section_id: 5.4.2
      ansible.builtin.import_tasks:
        file: error_logging.yml
