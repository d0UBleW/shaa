---
- name: OpenSCAP
  tags:
    - scan
  when:
    - scan | bool
  block:
    - name: Check for OS family compatibility (skip if ok, fail if not)
      ansible.builtin.fail:
        msg: |
          The OS family ({{ ansible_os_family }}) is currently not supported
          yet.
      when:
        - ansible_os_family not in supported_os_families

    - name: |
        Check for Debian-based distribution compatibility
        (skip if ok, fail if not)
      vars:
        maj_ver: "{{ ansible_distribution_major_version | int }}"
      ansible.builtin.fail:
        msg: >-
          The distribution ({{ ansible_distribution }} {{ maj_ver }}) is
          currently not supported yet.
      when:
        - ansible_os_family == "Debian"
        - ansible_distribution not in supported_debian_distribution or
          (ansible_distribution == "Debian" and maj_ver | int < 10)

    - name: Include OS family specific variables
      when:
        - ansible_os_family != "Debian"
      ansible.builtin.include_vars:
        file: "{{ ansible_os_family }}.yml"

    - name: Include distribution specific variables
      when:
        - ansible_os_family != "Suse"
      ansible.builtin.include_vars:
        file: "{{ ansible_distribution }}.yml"

    - name: Install OpenSCAP
      ansible.builtin.package:
        name: "{{ pkg }}"
        state: present
      loop: "{{ openscap_pkgs }}"
      loop_control:
        loop_var: pkg
        label: "{{ pkg }}"

    - name: Copy xccdf file for Debian OS family
      vars:
        ver: >-
          {%- if ansible_distribution == "Ubuntu" -%}
            {{ ansible_distribution_major_version }}04
          {%- else -%}
            {{ ansible_distribution_major_version }}
          {%- endif -%}
      when:
        - ansible_os_family == "Debian"
      ansible.builtin.copy:
        src: "ssg/ssg-{{ ansible_distribution | lower }}{{ ver }}-ds.xml"
        dest: "/usr/share/xml/scap/ssg/content/"
        owner: root
        group: root
        mode: "0644"

    - name: Run scanner
      vars:
        ver: "{{ ansible_distribution_major_version }}"
        def_name: >-
          {{ ansible_distribution | lower }}{{ ver }}
        final_name: >-
          {{ xccdf_name | default(def_name) }}
        xml_file: >-
          /usr/share/xml/scap/ssg/content/ssg-{{ final_name }}-ds.xml
      ansible.builtin.command: >-
        oscap xccdf eval
        --report /tmp/{{ report_output_prefix }}-{{ profile.out }}
        --profile {{ profile.name }} {{ xml_file }}
      when:
        - profile.tag in scan_profiles
      register: scan_out
      changed_when: true
      failed_when: scan_out.rc == 1
      loop: "{{ oscap_profiles }}"
      loop_control:
        loop_var: profile
        label: "{{ profile.name }}"

    - name: Retrieve scanner output
      vars:
        dir: "{{ (oscap_report_dir | default('.')).rstrip('/') }}"
      ansible.builtin.fetch:
        src: "/tmp/{{ report_output_prefix }}-{{ profile.out }}"
        dest: "{{ dir }}/oscap-report/"
      when:
        - profile.tag in scan_profiles
      loop: "{{ oscap_profiles }}"
      loop_control:
        loop_var: profile
        label: "{{ profile.out }}"
